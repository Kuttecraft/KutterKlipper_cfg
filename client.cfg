###################################################################################################################################
#  ██████╗ ██████╗ ███████╗███████╗███████╗██╗   ██╗██████╗ ███████╗     █████╗ ██████╗ ██╗   ██╗ █████╗ ███╗   ██╗ ██████╗███████╗
#  ██╔══██╗██╔══██╗██╔════╝██╔════╝██╔════╝██║   ██║██╔══██╗██╔════╝    ██╔══██╗██╔══██╗██║   ██║██╔══██╗████╗  ██║██╔════╝██╔════╝
#  ██████╔╝██████╔╝█████╗  ███████╗███████╗██║   ██║██████╔╝█████╗      ███████║██║  ██║██║   ██║███████║██╔██╗ ██║██║     █████╗  
#  ██╔═══╝ ██╔══██╗██╔══╝  ╚════██║╚════██║██║   ██║██╔══██╗██╔══╝      ██╔══██║██║  ██║╚██╗ ██╔╝██╔══██║██║╚██╗██║██║     ██╔══╝  
#  ██║     ██║  ██║███████╗███████║███████║╚██████╔╝██║  ██║███████╗    ██║  ██║██████╔╝ ╚████╔╝ ██║  ██║██║ ╚████║╚██████╗███████╗
#  ╚═╝     ╚═╝  ╚═╝╚══════╝╚══════╝╚══════╝ ╚═════╝ ╚═╝  ╚═╝╚══════╝    ╚═╝  ╚═╝╚═════╝   ╚═══╝  ╚═╝  ╚═╝╚═╝  ╚═══╝ ╚═════╝╚══════╝
###################################################################################################################################

[gcode_macro _GLOBAL_VARS]
variable_preheat_extruder_temp: 180
gcode:
    RESPOND PREFIX="GLOBAL_VARS" 

# Pressure Advance test macro by drawing 20 simple lines
#
# Adapted from: https://www.reddit.com/r/VORONDesign/comments/sjdiol/pressure_advance_testing_macro_klipper/
# to suit home-made free ABL that requires a pause after homing to manually retract the probe.
#
# Este proceso es una unica macro:
#
# - PRESSURE_ADVANCE_TEST
#   primero alcanza las temperaturas objetivo de la cama y el extrusor, luego un homeall y hace un sondeo
#   automatico si hay un dispositivo para ello, seguidamente inicia la prueba de Avance de Presion, imprimiendo
#   20 lineas usando diferentes valores de avance de presion, segun los valores indicados en los parametros 
#   (PA_START=0.01 PA_STEP=0.01 NZL=0.4).
#
#   BED_TEMP      = temperatura objetivo de la cama.
#   EXTRUDER_TEMP = temperatura objetivo del extrusor.
#   PA_START      = presion de avance inicial.
#   PA_STEP       = incremento por linea de la presion de avance.
#   NZL           = diametro de la boquilla, por defecto la que se tenga configurada en klipper (0.4).
#
# ej. PRESSURE_ADVANCE_TEST BED_TEMP=65 EXTRUDER_TEMP=205 PA_START=0.01 PA_STEP=0.01 NZL=0.4
#
# Al terminar la prueba se realiza el calculo del presure advance:
# Pressure Advance = PA_START + (PA_STEP * n)  n = linea mas recta y sin imperfecciones (0-19). 
#
# ej. .01 + (.01 * 11) = .12
#
# SET_PRESSURE_ADVANCE ADVANCE=0.12
#

[gcode_macro PRESSURE_ADVANCE_TEST]
description: Compensa el retraso de presión del filamento para mejorar las esquinas y la calidad en cambios de velocidad.

gcode:

  ; variables de configuracion
  {% set NZL_CFG = printer.configfile.config["extruder"]["nozzle_diameter"]|float %}    ; diametro de la boquilla configurada en klipper.
  {% set X_MAX = printer.configfile.config["stepper_x"]["position_max"]|float %}   ; posiciona el cabezal en position_max
  {% set Y_MAX = printer.configfile.config["stepper_y"]["position_max"]|float %}   ; posiciona el cabezal en position_max
  {% set Z_MAX = printer.configfile.config["stepper_z"]["position_max"]|float %}   ; posiciona el cabezal en position_max
  {% set X_MID = X_MAX / 2.0 %}  ; centro de la cama en eje X
  {% set Y_MID = Y_MAX / 2.0 %}  ; centro de la cama en eje Y

  ; parametros
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
  {% set PA_START = params.PA_START|default(0.0)|float %}
  {% set PA_STEP = params.PA_STEP|default(0.005)|float %}
  {% set NZL = params.NZL|default(NZL_CFG)|float %}
  
  ; constantes de movimiento
  {% set Y_HOME = Y_MAX-5 %}   ; posiciona el cabezal en position_max -5
  {% set X_HOME = X_MAX-5 %}   ; posiciona el cabezal en position_max -5
  {% set Z = Z_MAX / 2 %}      ; subir Z al terminar el test
  {% set XY_SPEED = 1500 %}    ; velocidad de desplazamiento del eje X e Y al finalizar   
  {% set Z_SPEED = 600 %}      ; velocidad de desplazamiento del eje Z

  ; variables
  {% set E20 = (0.1147475 * NZL) * 20|float %}
  {% set E40 = (0.1147475 * NZL) * 40|float %}


  # gcode
  M140 S{BED_TEMP}      ; Empezar a calentar la cama.
  M104 S{EXTRUDER_TEMP} ; Empezar a calentar la extrusora.
  M190 S{BED_TEMP}      ; Espere a que la cama alcance la temperatura objetivo antes de continuar.
  M109 S{EXTRUDER_TEMP} ; Espere a que el extrusor alcance la temperatura objetivo antes de continuar.
  G28                   ; Inicio todos los ejes.
  {% if printer.configfile.config["bltouch"] is defined or 
        printer.configfile.config["probe"] is defined  %}
    BED_MESH_CALIBRATE  ; G29 sondeo de la cama.
  {% endif %}

  G21     ; unidades milimetricas
  G90     ; absoluto XYZ
  M83     ; relative E
  G92 E0  ; restablecer la extrusora 
  M106 S0 ; poner la velocidad del ventilador a cero

  SET_VELOCITY_LIMIT ACCEL=3000 ACCEL_TO_DECEL=1500
  #
  # Doble linea de purgado en el lado izquierdo de la cama.
  #
  G1 X10.1 Y20 Z0.28 F5000.0             ;  mover a la posicion inicial
  G1 X10.1 Y{Y_MAX-20} Z0.28 F1500.0 E15 ;  dibujar la primera linea
  G1 X10.4 Y{Y_MAX-20} Z0.28 F5000.0     ;  muevete un poco hacia un lado
  G1 X10.4 Y20 Z0.28 F1500.0 E30         ;  dibujar la segunda linea
  G1 E-2 F1800                           ;  retraer
  G1 Z5 F300                             ;  moverse por encima de la altura de la capa

  # bucle para imprimir las 20 lineas.
  {% for i in range(0, 20) %}
    SET_PRESSURE_ADVANCE ADVANCE={PA_START + (i * PA_STEP)}           ;  establecer avance de presion en cada linea
    M117 Avance de presion de prueba:  {PA_START + (i * PA_STEP)}
    G1 X{(X_MID-40)} Y{(Y_MID-35)+(5*i)} F5000                        ;  mover a la posiciun inicial
    G1 Z0.2 F300                                                      ;  mover a la altura de la capa
    G1 E2 F1800                                                       ;  extruir
    G1 X{(X_MID-20)} Y{(Y_MID-35)+(5*i)} E{E20} F300                  ;  linea de impresion 1 parte
    G1 X{(X_MID+20)} Y{(Y_MID-35)+(5*i)} E{E40} F9000                 ;  linea de impresion 2 parte
    G1 X{(X_MID+40)} Y{(Y_MID-35)+(5*i)} E{E20} F300                  ;  linea de impresion 3 parte
    G1 E-2 F1800                                                      ;  retraer
    G1 Z5 F300                                                        ;  moverse por encima de la altura de la capa, a 5mm
  {% endfor %}

  TURN_OFF_HEATERS ; desactiva extrusor y cama

  # Se prepara la cama para mostrar el resultado del test

  ;  Desplaza Z al centro
  G1 Z{Z} F{Z_SPEED}

  ; desplaza la cama hacia adelante solo si la cinematica lo permite.
  {% if printer.configfile.config["printer"]["kinematics"]|lower in ['cartesian' , 'deltesian' , 'corexz'] %}
    G1 X{X_HOME} Y{Y_HOME} F{XY_SPEED} ;  Presenta la impresion desplazando la cama hacia adelante y aparcando el cabezal.
  {% endif %}

  M117 Encuentre la mejor linea y multipliquela por ({PA_START} + (linea seleccionada(0-19) * {PA_STEP})) para encontrar su configuracion de Pressure Advance idonea.	

###############################################################################
#  ██╗  ██╗██╗███╗   ██╗███████╗███╗   ███╗ █████╗ ████████╗██╗ ██████╗███████╗
#  ██║ ██╔╝██║████╗  ██║██╔════╝████╗ ████║██╔══██╗╚══██╔══╝██║██╔════╝██╔════╝
#  █████╔╝ ██║██╔██╗ ██║█████╗  ██╔████╔██║███████║   ██║   ██║██║     ███████╗
#  ██╔═██╗ ██║██║╚██╗██║██╔══╝  ██║╚██╔╝██║██╔══██║   ██║   ██║██║     ╚════██║
#  ██║  ██╗██║██║ ╚████║███████╗██║ ╚═╝ ██║██║  ██║   ██║   ██║╚██████╗███████║
#  ╚═╝  ╚═╝╚═╝╚═╝  ╚═══╝╚══════╝╚═╝     ╚═╝╚═╝  ╚═╝   ╚═╝   ╚═╝ ╚═════╝╚══════╝
###############################################################################

# Current Version v_20240401
[gcode_macro TEST_KINEMATICS]
description: Mueve el cabezal de impresión en patrones rápidos para ayudarte a detectar problemas mecánicos
gcode:
    # home not homed axies
    {% for axis in ['x', 'y', 'z'] %}
        {% if axis not in printer.toolhead.homed_axes %}
            G28 { axis }
        {% endif %}
    {% endfor %}

    # move bed down 3 cm at max speed
    G0 Z30 F1000

    # move head to center of bed at max speed
    G0 X{ printer.toolhead.axis_maximum.x / 2 } Y{ printer.toolhead.axis_maximum.y / 2 } F{ printer.toolhead.max_velocity * 60 }

    # Vibrate max speed +/- 30% of min-min to max-max
    {% for i in range(30) %}
        G0 X{ ( printer.toolhead.axis_maximum.x / 2 ) * ( 1 + i / 100.0 ) } Y{ ( printer.toolhead.axis_maximum.y / 2 ) * ( 1 + i / 100.0 ) } F{ printer.toolhead.max_velocity * 60 }
        G0 X{ ( printer.toolhead.axis_maximum.x / 2 ) * ( 1 - i / 100.0 ) } Y{ ( printer.toolhead.axis_maximum.y / 2 ) * ( 1 - i / 100.0 ) } F{ printer.toolhead.max_velocity * 60 }
    {% endfor %}

    # move head to center of bed at max speed
    G0 X{ printer.toolhead.axis_maximum.x / 2 } Y{ printer.toolhead.axis_maximum.y / 2 } F{ printer.toolhead.max_velocity * 60 }

    # Vibrate max speed +/- 30% of max-min to min-max
    {% for i in range(30) %}
        G0 X{ ( printer.toolhead.axis_maximum.x / 2 ) * ( 1 - i / 100.0 ) } Y{ ( printer.toolhead.axis_maximum.y / 2 ) * ( 1 + i / 100.0 ) } F{ printer.toolhead.max_velocity * 60 }
        G0 X{ ( printer.toolhead.axis_maximum.x / 2 ) * ( 1 + i / 100.0 ) } Y{ ( printer.toolhead.axis_maximum.y / 2 ) * ( 1 - i / 100.0 ) } F{ printer.toolhead.max_velocity * 60 }
    {% endfor %}

    # move head to center of bed at max speed
    G0 X{ printer.toolhead.axis_maximum.x / 2 } Y{ printer.toolhead.axis_maximum.y / 2 } F{ printer.toolhead.max_velocity * 60 }

##################################################################################
#  ████████╗███████╗███████╗████████╗    ███████╗██████╗ ███████╗███████╗██████╗ 
#  ╚══██╔══╝██╔════╝██╔════╝╚══██╔══╝    ██╔════╝██╔══██╗██╔════╝██╔════╝██╔══██╗
#     ██║   █████╗  ███████╗   ██║       ███████╗██████╔╝█████╗  █████╗  ██║  ██║
#     ██║   ██╔══╝  ╚════██║   ██║       ╚════██║██╔═══╝ ██╔══╝  ██╔══╝  ██║  ██║
#     ██║   ███████╗███████║   ██║       ███████║██║     ███████╗███████╗██████╔╝
#     ╚═╝   ╚══════╝╚══════╝   ╚═╝       ╚══════╝╚═╝     ╚══════╝╚══════╝╚═════╝ 
#################################################################################

# Current Version v_20250228
# All credits to AndrewEllis93 - https://github.com/AndrewEllis93
# Check last oficial version at - https://github.com/AndrewEllis93/Print-Tuning-Guide/blob/main/macros/TEST_SPEED.cfg

[gcode_macro TEST_SPEED]
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

description: Prueba de los parámetros máximos de velocidad y aceleración de la impresora. Mide la distancia desde el home, se mueve y vuelve a medir la distancia al home.

gcode:
    # Speed
    {% set speed  = params.VELOCIDAD|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.REPETICIONES|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACELERACION|default(printer.configfile.settings.printer.max_accel)|int %}
    # Minimum Cruise Ratio
    {% set min_cruise_ratio = params.MIN_CRUISE_RATIO|default(0.5)|float %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.MARGEN|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} MINIMUM_CRUISE_RATIO={min_cruise_ratio}
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
    {% endif %}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small pattern box
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio} 
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
    {% endif %}

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED


#######################################################################################
#  ███████╗████████╗ █████╗ ██████╗ ████████╗    ██████╗ ██████╗ ██╗███╗   ██╗████████╗
#  ██╔════╝╚══██╔══╝██╔══██╗██╔══██╗╚══██╔══╝    ██╔══██╗██╔══██╗██║████╗  ██║╚══██╔══╝
#  ███████╗   ██║   ███████║██████╔╝   ██║       ██████╔╝██████╔╝██║██╔██╗ ██║   ██║   
#  ╚════██║   ██║   ██╔══██║██╔══██╗   ██║       ██╔═══╝ ██╔══██╗██║██║╚██╗██║   ██║   
#  ███████║   ██║   ██║  ██║██║  ██║   ██║       ██║     ██║  ██║██║██║ ╚████║   ██║   
#  ╚══════╝   ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝       ╚═╝     ╚═╝  ╚═╝╚═╝╚═╝  ╚═══╝   ╚═╝   
#######################################################################################

# Current Version v_20250405
# More detailed information and description - https://klipper.3dwork.io/klipper/empezamos/configuracion-klipper-en-laminadores
# Configure prime line - From Klipper-Adaptive-Meshing-Purging https://github.com/kyleisah/Klipper-Adaptive-Meshing-Purging

### START_PRINT ###
[gcode_macro START_PRINT]

##############################################################################
# BOOLEAN VARIABLES(True|False) ALWAYS UPPERCASE THE FIRST LETTER            #
# LAS VARIABLES BOOLEANAS(True|False) SIEMPRE LA PRIMERA LETRA EN MAYUSCULAS #
##############################################################################

variable_buffer: 80
variable_purge_enable: True          # Cambie a False si desea desactivar la purga.
variable_adaptive_enable: False      # Cambie a False si desea que la purga esté en el mismo lugar en cada impresión
variable_z_height: 0.3               # Altura sobre la cama para purgar
variable_z_speed: 300                # Default Z speed (in mm/min) for start print movements, set to 300 mm/min (5 mm/s)
variable_purge_amount: 35            # Cantidad de filamento en milímetros a purgar
variable_line_length: 100            # (USE 80 como poco) La longitud total deseada de la línea de purga en milímetros, alrededor de 1/5 de la longitud del eje X es un buen valor inicial
variable_flow_rate: 12               # Caudal deseado en mm3/s (Alrededor de 12 para hotends de flujo estándar, alrededor de 24 para hotends de alto flujo)
variable_x_default: 5                # Ubicación X predeterminada para purgar. Si adaptive_enable es True, esto se sobrescribe
variable_y_default: 7                # Ubicación Y predeterminada para purgar. Si adaptive_enable es True, esto se sobrescribe
variable_distance_to_object_y: 10    # Distancia Y en milímetros desde el área de impresión para la purga. Debe ser menor o igual que y_default si adaptive_enable es False

#Configure Leveling
variable_calibrate_z_tilt: False    # Si es True, realiza el proceso de calibración z-tilt - https://3dwork.qitec.net/klipper/empezamos/nivelacion-gantry-z-tilt
variable_calibrate_bed_mesh: False   # Si es True, crea una malla nueva. False, carga la malla predeterminada. - https://3dwork.qitec.net/klipper/empezamos/malla-nivelacion-de-cama-klipper

gcode:
    #Get Printer built volume dimensions
    #Obtener las dimensiones de impresion
    {% set X_MAX = printer.toolhead.axis_maximum.x|default(100)|float %}
    { action_respond_info("x_max        : %f" % (X_MAX)) }
    {% set Y_MAX = printer.toolhead.axis_maximum.y|default(100)|float %}
    { action_respond_info("y_max        : %f" % (Y_MAX)) }
    {% set Z_MAX = printer.toolhead.axis_maximum.z|default(100)|float %}
    { action_respond_info("z_max        : %f" % (Z_MAX)) }

    #Get Printer config
    #Obtener configuración de la impresora
    {% set PROBECONFIG = printer['configfile'].config["probe"] is defined %}
    {% set BLTOUCHCONFIG = printer['configfile'].config["bltouch"] is defined %}
    {% set BEACONCONFIG = printer['configfile'].config["beacon"] is defined %} 
    {% set IDMCONFIG = printer['configfile'].config["idm"] is defined %}
    {% set CARTOGRAPHERCONFIG = printer['configfile'].config["cartographer"] is defined %}
    
    {% if PROBECONFIG %}
        {% set IS_VORONTAP = printer['configfile'].config["probe"].x_offset==0 and
                             printer['configfile'].config["probe"].y_offset==0 and 
                             printer['configfile'].config["probe"].activate_gcode is defined %} 
    {% else %}
        {% set IS_VORONTAP = False %}
    {% endif %}


    
    {% set Z_TILT = printer['configfile'].config["z_tilt"] is defined %}
    { action_respond_info("z-tilt  : %d" % (Z_TILT)) }

    #Get Nozzle diameter and filament width
    #Obtener el diámetro de la boquilla y el ancho del filamento
    {% set NOZZLE = printer.extruder.nozzle_diameter|default(0.4)|float %}
    { action_respond_info("nozzle_diameter  : %f" % (NOZZLE)) }
    {% set FILADIA = printer.extruder.filament_diameter|default(1.75)|float %}
    { action_respond_info("filament_diameter  : %f" % (FILADIA)) }

    #Set Start coordinates of priming lines
    #Establecer las coordenadas de inicio de las líneas de purga
    {% set X_START = 10.0|default(10.0)|float %}
    { action_respond_info("x_start        : %f" % (X_START)) }
    {% set Y_START = 20.0|default(20.0)|float %}
    { action_respond_info("y_start        : %f" % (Y_START)) }

    #Get Bed and Extruder temperature from Slicer GCode
    #Obtener la temperatura de la cama y del extrusor del GCode del laminador
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    { action_respond_info("bed_temperature        : %f" % (BED_TEMP)) }
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    { action_respond_info("extruder_temperature        : %f" % (EXTRUDER_TEMP)) }

    #Obtiene la temperatura de precalentamiento de las variables globales.
    {% set PREHEAT_EXTRUDER_TEMP = printer["gcode_macro _GLOBAL_VARS"].preheat_extruder_temp|float %}

    #Get print boundaries from Slicer GCode
    #Obtener límites de impresión del GCode del laminador
    {% if adaptive_enable and not params.PRINT_MIN %}
        {action_respond_info("PRINT_MIN is not provided")}
    {% else %}
        {action_respond_info("PRINT_MIN is provided")}
    {% endif %}

    #Pre-heat bed
    #Precalentar la cama
    M117 Pre-heating bed...
    { action_respond_info("Pre-heating bed : %d" % (BED_TEMP)) }
    M140 S{BED_TEMP}

    
    # Pre-heat nozzle VORON TAP
    {% if IS_VORONTAP %}
        {% if PREHEAT_EXTRUDER_TEMP > 150 %}
            {% set PREHEAT_EXTRUDER_TEMP = 150 %}
        {% endif %}
    {% endif %}    
    #Pre-heat nozzle
    #Precalentar nozzle
    M117 Pre-heating extruder...
    { action_respond_info("Pre-heating extruder : %d" % (PREHEAT_EXTRUDER_TEMP)) }
    M104 S{PREHEAT_EXTRUDER_TEMP}

    #Home
    M117 Homing...
    {action_respond_info("Homing...")}
    G28
    {action_respond_info("Homing Position...")}
    GET_POSITION

    #Z-tilt Leveling
    {% if Z_TILT %}
        {% if calibrate_z_tilt %}
            M117 Z-tilt Leveling...
            {action_respond_info("Z-TILT Leveling...")}
            Z_TILT_ADJUST
        {% endif %}
    {% else %}
        {action_respond_info("Z-TILT is not enabled")}
    {% endif %}

    #Bed Leveling
    M117 Bed Leveling...
    {action_respond_info("Bed Leveling...")}

    {% if calibrate_bed_mesh and (BLTOUCHCONFIG or PROBECONFIG or BEACONCONFIG or IDMCONFIG or CARTOGRAPHERCONFIG) %}
        BED_MESH_CLEAR
        { action_respond_info("Bed Leveling Mesh Cleared...")}
        { action_respond_info("print_min: %s" % params.PRINT_MIN) }
        { action_respond_info("print_max: %s" % params.PRINT_MAX) }
        BED_MESH_CALIBRATE MESH_MIN={params.PRINT_MIN} MESH_MAX={params.PRINT_MAX} PROFILE=default # Create a new bed mesh if adaptative area is provided will use it
        {action_respond_info("Bed Leveling Creating New Mesh...")}
        BED_MESH_PROFILE LOAD=default # Load stored bed mesh
        {action_respond_info("Bed Leveling Loading Default Mesh...")}
    {% else %}
        BED_MESH_PROFILE LOAD=default # Load stored bed mesh
        {action_respond_info("Bed Leveling Loading Default Mesh...")}
    {% endif %}
    
    #Pre-heat nozzle
    #Precalentar nozzle
    M117 Calentando extrusor...
    { action_respond_info("Calentando extrusor: %d" % (EXTRUDER_TEMP)) }
    M104 S{EXTRUDER_TEMP}

    #Move up to clean bed
    #Desplazamiento a zona de calentado
    M117 Moviendo a posición de calentamiento...
    {action_respond_info("Moviendo a posición de calentamiento...")}
    G1 X{X_MAX / 2.0} Y{Y_MAX - 20} Z{Z_MAX / 4.0} F6000
    {action_respond_info("Moviendo a posición...")}
    GET_POSITION

    #Heat nozzle and bed
    #Calentando nozzle y cama
    M117 Calentado Cama Caliente...
    { action_respond_info("Calentado Cama Caliente a : %d" % (BED_TEMP)) }
    M190 S{BED_TEMP}

    M117 Calentado Extrusor...
    { action_respond_info("Calentado Extrusor a : %d" % (EXTRUDER_TEMP)) }
    M109 S{EXTRUDER_TEMP} T0                       

   
    #Prime Line
    #Linea de purgado
    {% if purge_enable %}
        {% if adaptive_enable %} 
            {% if params.PRINT_MIN %}
                {% set print_min_y = params.PRINT_MIN.split(",")[1]|float %}
                {% set y_origin = (print_min_y - distance_to_object_y) | float %}
                {% if y_origin < 5 %} # Check y_origin out of bounds
                    { action_respond_info("Corrected y_origin dynamic prime line out of bounds : %f" % (y_origin)) }
                    {% set y_origin = y_default | float %}
                {% endif %}
                {% set x_origin = params.PRINT_MIN.split(",")[0]|float %}
                { action_respond_info("Prime Line x_origin          : %f" % (x_origin)) }
                { action_respond_info("Prime Line y_origin          : %f" % (y_origin)) }
            {% endif %}
        {% else %}
            {% set x_origin = x_default | float %}
            {% set y_origin = y_default | float %}
            { action_respond_info("Prime Line x_origin          : %f" % (x_origin)) }
            { action_respond_info("Prime Line y_origin          : %f" % (y_origin)) }
        {% endif %}
    {% else %}
        { action_respond_info("Prime Line deactivated") }
    {% endif %}

    {% set max_extrude_cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
    { action_respond_info("max_extrude_cross_section : %f" % (max_extrude_cross_section)) }
    {% set z_offset = 0 %}

    {% if BLTOUCHCONFIG %}
        M117 BlTouch zoffset used...
        {action_respond_info("BlTouch zoffset used...")}
        {% set z_offset = printer.configfile.settings.bltouch.z_offset %}
    {% elif PROBECONFIG %}
        M117 Probe zoffset used...
        {action_respond_info("Probe zoffset used...")}
        {% set z_offset = printer.configfile.config.probe.z_offset %}
    {% elif BEACONCONFIG %}
        M117 Beacon zoffset used...
        {action_respond_info("Beacon zoffset used...")}
        {% set z_offset = printer.configfile.config.beacon.z_offset %}
    {% elif IDMCONFIG %}
        M117 IDM zoffset used...
        {action_respond_info("IDM zoffset used...")}
        {% set z_offset = printer.configfile.config.idm.z_offset %}
    {% elif CARTOGRAPHERCONFIG %}
        M117 Cartographer zoffset used...
        {action_respond_info("Cartographer zoffset used...")}
        {% set z_offset = printer.configfile.config.cartographer.z_offset %}
    {% endif %}

    {% if purge_enable %} 
        # Prime Line Volumetric Calculations
        # Calculos volumetricos para la linea de purga
        {% set nozzle_dia = printer.configfile.config.extruder.nozzle_diameter | float %}
        { action_respond_info("nozzle_dia : %f" % (nozzle_dia)) }
        {% set cross_section = nozzle_dia * z_height | float %}
        { action_respond_info("cross_section : %f" % (cross_section)) }
        {% set purge_move_speed = (cross_section * flow_rate) * 60 | float %}
        { action_respond_info("purge_move_speed : %f" % (purge_move_speed)) }
        {% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
        { action_respond_info("travel_speed : %f" % (travel_speed)) }
        { action_respond_info("z_speed : %f" % (z_speed)) }

        M117 Prime Line...
        {action_respond_info("Prime Line...")}

        G92 E0                          # Reset extruder
        G0 F{travel_speed/1.5}          # Set travel speed
        G90                             # Absolute positioning
        G1 X{x_origin} Y{y_origin}      # Move to purge position
        G1 Z{nozzle_dia} F{z_speed}     # Move to purge Z height
        M83                             # Relative extrusion mode

        # Prime Line X check to adjust to PRINT_MAX_X coordinate
        {% set y_prime_end = (y_origin + line_length) | float %}
        {% set print_max_y = params.PRINT_MAX.split(",")[1]|float %}
        {% if y_prime_end > print_max_y %}
            {% set y_prime_end = print_max_y | float %}
        {% endif %}
        { action_respond_info("y_prime_end : %f" % (y_prime_end)) }
        
        {% if adaptive_enable == False %} 
            M117 Formando gota de limpieza...
            {action_respond_info("Formando gota de limpieza...")}
            # Extrude a blob
            G1 F60 E20
            # 40% fan
            M106 S102 
            # Move the extruder up by 5mm while extruding, breaks away from blob
            G1 Z5 F100 E5  
            # Move to wipe position, but keep extruding so the wipe is attached to blob
            G1 F200 Y{y_origin + 25} E1 
            # Go down diagonally while extruding
            # Broken down in z moves under 2mm as a workaround for a tuning tower test.
            # The tuning tower command thinks a new print has been started when z moves over 2mm and aborts.
            G1 F200 Y{y_origin + 30} Z3.8 E0.5
            G1 F200 Y{y_origin + 35} Z2.6 E0.5
            G1 F200 Y{y_origin + 40} Z1.4 E0.5
            G1 F200 Y{y_origin + 45} Z0.2 E0.5
            # 0% fan
            M106 S0
            # Wipe line
            M117 Limpiando línea de cebado...
            {action_respond_info("Limpiando línea de cebado...")}
            G1 Y{y_prime_end - 10} Z{z_height} E{purge_amount/2} F{purge_move_speed}   # Purge line
            G1 Y{y_prime_end} F{travel_speed}
        {% else %}
            M117 Limpiando línea de cebado...
            {action_respond_info("Limpiando línea de cebado...")}
            # Wipe line
            G1 Y{y_prime_end - 10} Z{z_height} E{purge_amount/2} F{purge_move_speed}   # Purge line
            G1 Y{y_prime_end} F{travel_speed}
        {% endif %}
    {% endif %}

    M117 Preparándose para imprimir...
    {action_respond_info("Preparándose para imprimir...")}
    G1 E-{nozzle_dia} F2100                                             # Retract nozzle diameter
    G92 E0                                                              # Reset extruder distance
    M82                                                                 # Absolute extrusion mode
    G0 Z{z_height * 2} F{z_speed}                                       # Z hop

    M117 Listo para imprimir...
    {action_respond_info("Listo para imprimir...")}

[gcode_macro SETUP_START_PRINT]
gcode:
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=calibrate_bed_mesh VALUE={params.CALIBRATE_BED_MESH|default(True)|int}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=adaptive_enable VALUE={params.ADAPTIVE_ENABLE|default(True)|int}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=z_height VALUE={params.Z_HEIGHT|default(0.4)|float}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=purge_amount VALUE={params.PURGE_AMOUNT|default(40)|float}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=line_length VALUE={params.LINE_LENGTH|default(50)|float}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=flow_rate VALUE={params.FLOW_RATE|default(12)|float}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=x_default VALUE={params.X_DEFAULT|default(10)|float}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=y_default VALUE={params.Y_DEFAULT|default(10)|float}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=distance_to_object_y VALUE={params.DISTANCE_TO_OBJECT_Y|default(10)|float} 

[gcode_macro M109]
description: Transformar el gcode M109 (esperar la temperatura del hotend) en una macro nativa de Klipper
rename_existing: M99109
gcode:
    {% set s = params.S|float %}                                           # Parameters
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}        # Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s-1} MAXIMUM={s+1}       # Wait for hotend temp (within 1 degree)
    {% endif %}

[gcode_macro M190]
description: Transformar el gcode M190 (esperar la temperatura de la cama) en una macro nativa de Klipper
rename_existing: M99190
gcode:
    {% set s = params.S|float %}                                           # Parameters

    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}        # Set bed temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s-1} MAXIMUM={s+1}       # Wait for bed temp (within 1 degree)
    {% endif %}

#######################################################################
#  ███████╗███╗   ██╗██████╗     ██████╗ ██████╗ ██╗███╗   ██╗████████╗
#  ██╔════╝████╗  ██║██╔══██╗    ██╔══██╗██╔══██╗██║████╗  ██║╚══██╔══╝
#  █████╗  ██╔██╗ ██║██║  ██║    ██████╔╝██████╔╝██║██╔██╗ ██║   ██║   
#  ██╔══╝  ██║╚██╗██║██║  ██║    ██╔═══╝ ██╔══██╗██║██║╚██╗██║   ██║   
#  ███████╗██║ ╚████║██████╔╝    ██║     ██║  ██║██║██║ ╚████║   ██║   
#  ╚══════╝╚═╝  ╚═══╝╚═════╝     ╚═╝     ╚═╝  ╚═╝╚═╝╚═╝  ╚═══╝   ╚═╝   
#######################################################################

# Current Version v_202305221109
#### END_PRINT ####
[gcode_macro END_PRINT]
gcode:
        #Get Printer built volume dimensions
        #Obtener dimensiones area de impresion
        {% set X_MAX = printer.toolhead.axis_maximum.x|default(100)|float %}
        {% set Y_MAX = printer.toolhead.axis_maximum.y|default(100)|float %}

        #Fix-up extruder
        #Asegurando extrusion
        G91                                            
        G1 E-2 F2700            # First retraction movement, adjust to your machine if needed - Primera retraccion, ajusta a tu maquina                                   
        G1 E-1.5 Z0.2 F2400     # Second retraction movement - Segunda retracción                
        G1 X5 Y5 F6000                               
        G1 Z10                                     
        G90                                        

        #Present print
        #Presentando impresion
        G1 Z{printer.toolhead.position.z + 10} F600
        G1 X{X_MAX / 2} Y{Y_MAX} F6000
        M106 S0                 # Disable fans - Desactivar ventiladores                                   
        M104 S0                 # Disable bed - Apagar cama
        M140 S0                 # Disable nozzle - Apagar nozzle                

        #Disable Steppers
        #Desactivando motores
        M84 X Y E              

######################################################################################################
#   █████╗ ██████╗ ███████╗ █████╗     ██████╗ ███████╗██████╗     ███╗   ███╗███████╗███████╗██╗  ██╗
#  ██╔══██╗██╔══██╗██╔════╝██╔══██╗    ██╔══██╗██╔════╝██╔══██╗    ████╗ ████║██╔════╝██╔════╝██║  ██║
#  ███████║██████╔╝█████╗  ███████║    ██████╔╝█████╗  ██║  ██║    ██╔████╔██║█████╗  ███████╗███████║
#  ██╔══██║██╔══██╗██╔══╝  ██╔══██║    ██╔══██╗██╔══╝  ██║  ██║    ██║╚██╔╝██║██╔══╝  ╚════██║██╔══██║
#  ██║  ██║██║  ██║███████╗██║  ██║    ██████╔╝███████╗██████╔╝    ██║ ╚═╝ ██║███████╗███████║██║  ██║
#  ╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝    ╚═════╝ ╚══════╝╚═════╝     ╚═╝     ╚═╝╚══════╝╚══════╝╚═╝  ╚═╝
######################################################################################################

# More info https://3dwork.gitbook.io/3dwork.io/klipper/empezamos/malla-nivelacion-de-cama-klipper
### CALCULATE_BED_MESH - Helps to calculate bed mesh boundaries automatically

[gcode_macro CALCULAR_AREA_BED_MESH]
description: Calcula automáticamente los límites de bed_mesh en función de la configuración de Bltouch/Sensor Inductivo
gcode:
  {% set BED_MESH_MARGIN = params.BED_MESH_MARGIN|default(10)|float %}
  # Get Printer built volume dimensions
  {% set X_MAX = printer.toolhead.axis_maximum.x|default(230)|float %}
  {% set Y_MAX = printer.toolhead.axis_maximum.y|default(230)|float %}
  # Get Nothing/BLTouch/Probe X and Y offsets
  {% set X_OFFSET = 0.0 |float %}
  {% set Y_OFFSET = 0.0 |float %}
  #Get BLTouch/Probe X and Y offsets
  {% if printer.configfile.config["bltouch"] is defined %}
    {% set X_OFFSET = (printer.configfile.settings.bltouch.x_offset if printer.configfile.settings.bltouch.x_offset is defined else X_OFFSET)|float %}
    {% set Y_OFFSET = (printer.configfile.settings.bltouch.y_offset if printer.configfile.settings.bltouch.y_offset is defined else Y_OFFSET)|float %}
  {% endif %}
  {% if printer.configfile.config["probe"] is defined %}
    {% set X_OFFSET = (printer.configfile.config.probe.x_offset if printer.configfile.config.probe.x_offset is defined else X_OFFSET)|float %}
    {% set Y_OFFSET = (printer.configfile.config.probe.y_offset if printer.configfile.config.probe.y_offset is defined else Y_OFFSET)|float %}
  {% endif %}

  # bed_mesh boundaries calculations
  # bed_mesh_min and bed_mesh_max
  {% set BED_MESH_MIN_X = BED_MESH_MARGIN if X_OFFSET <= 0.0 else X_OFFSET + BED_MESH_MARGIN |float %}
  {% set BED_MESH_MIN_Y = BED_MESH_MARGIN if Y_OFFSET <= 0.0 else Y_OFFSET + BED_MESH_MARGIN |float %}
  {% set BED_MESH_MAX_X = X_MAX - (X_OFFSET)|abs - BED_MESH_MARGIN if X_OFFSET <= 0.0 else X_MAX - BED_MESH_MARGIN |float %}
  {% set BED_MESH_MAX_Y = Y_MAX - (Y_OFFSET)|abs - BED_MESH_MARGIN if Y_OFFSET <= 0.0 else Y_MAX - BED_MESH_MARGIN |float %}

  # Print values
  {action_respond_info("--- INFORMACIÓN DE LA MÁQUINA (REVISAR SI ESTÁ BIEN): ---")}
  {action_respond_info("BED_MESH_MARGIN : %f" % (BED_MESH_MARGIN))}
  {action_respond_info("X_MAX           : %f" % (X_MAX))}
  {action_respond_info("Y_MAX           : %f" % (Y_MAX))}
  {action_respond_info("X_OFFSET        : %f" % (X_OFFSET))}
  {action_respond_info("Y_OFFSET        : %f" % (Y_OFFSET))}
  {action_respond_info("BED_MESH_MIN_X  : %f" % (BED_MESH_MIN_X))}
  {action_respond_info("BED_MESH_MIN_Y  : %f" % (BED_MESH_MIN_Y))}
  {action_respond_info("BED_MESH_MAX_X  : %f" % (BED_MESH_MAX_X))}
  {action_respond_info("BED_MESH_MAX_Y  : %f" % (BED_MESH_MAX_Y))}
  {action_respond_info("--- VALORES PARA AGREGAR O ACTUALIZAR EN NUESTRA SECCIÓN BED_MESH ---")}
  {action_respond_info("mesh_max: %s,%s" % (BED_MESH_MAX_X,BED_MESH_MAX_Y))}
  {action_respond_info("mesh_min: %s,%s" % (BED_MESH_MIN_X,BED_MESH_MIN_Y))}